<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GSAP 动画演示</title>
      <link href="/2025/06/15/test1/"/>
      <url>/2025/06/15/test1/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h3 id="GSAP-动画演示"><a href="#GSAP-动画演示" class="headerlink" title="GSAP 动画演示"></a>GSAP 动画演示</h3><p>这是一个使用 GSAP 实现的简单交互动画。点击下方的彩色方块，可以触发它的旋转和缩放效果。</p><p>**</p><div id="gsap-animation-demo"></div><hr><script>  // 定义一个初始化GSAP沙箱的函数  function initGSAPSandbox() {    // 检查页面上是否存在沙箱容器，以及必要的库是否已加载    if (document.querySelector('#gsap-animation-demo') && typeof MiniSandbox !== 'undefined') {      new MiniSandbox({        el: '#gsap-animation-demo',        files: {          'index.html': {            title: 'HTML',            defaultValue: '<div id="animated-box">Click Me</div>',          },          'index.css': {            title: 'CSS',            defaultValue: `#animated-box {  width: 80px;  height: 80px;  background-color: #4d648d; /* 使用了您的主题色 */  border-radius: 8px;  cursor: pointer;  display: flex;  justify-content: center;  align-items: center;  font-size: 16px;  color: white;  font-weight: bold;}`,          },          'index.js': {            title: 'JS',            defaultValue: `const box = document.getElementById('animated-box');box.addEventListener('click', () => {  // 使用 GSAP 创建一个动画时间线  gsap.to(box, {    scale: 1.5,    rotation: 360,    duration: 0.5,    ease: "power2.out",    // 动画完成后，执行一个返回动画    onComplete: () => {      gsap.to(box, {        scale: 1,        rotation: 0,        duration: 0.3,        ease: "power1.inOut"      });    }  });});`,          },        },        defaultConfig: {          height: '250px',          // 【关键】通过 jsLibs 引入外部的 GSAP 库          jsLibs: ['https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js'],          autoRun: true,        },      });      console.log('GSAP Animation Sandbox Initialized!');    }  }  // 定义一个加载库并初始化的函数  const loadGSAPSandbox = () => {    if (typeof MiniSandbox === 'undefined') {      const miniSandboxScript = document.createElement('script');      miniSandboxScript.src = 'https://unpkg.com/mini-sandbox@0.3.11';      // MiniSandbox 库加载成功后，再执行初始化      miniSandboxScript.onload = initGSAPSandbox;      document.body.appendChild(miniSandboxScript);    } else {      initGSAPSandbox();    }  };  // 监听 Pjax 加载完成事件，以兼容无刷新跳转  document.addEventListener('pjax:success', loadGSAPSandbox);  // 页面首次加载时也执行一次  loadGSAPSandbox();</script></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test5</title>
      <link href="/2025/06/09/test5/"/>
      <url>/2025/06/09/test5/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test4</title>
      <link href="/2025/06/09/test4/"/>
      <url>/2025/06/09/test4/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test3</title>
      <link href="/2025/06/09/test3/"/>
      <url>/2025/06/09/test3/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test2</title>
      <link href="/2025/06/09/test2/"/>
      <url>/2025/06/09/test2/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><div class="site-card-group"><a class="site-card" href="https://xaoxuu.com" data-title=简约风格><div class="wrapper cover"><img class="cover fadeIn" src="https://bu.dusays.com/2023/06/01/6478965ce6557.webp"/></div><div class="info"><img class="flink-avatar" src="https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png"/><span class="site-title">xaoxuu</span></div></a><a class="site-card" href="https://colsrch.top" data-title=这是一段关于这个网站的描述文字><div class="wrapper cover"><img class="cover fadeIn" src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img class="flink-avatar" src="https://cdn1.tianli0.top/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="site-title">Colsrch</span></div></a><a class="site-card" href="https://linhk1606.github.io" data-title=这是一段关于这个网站的描述文字><div class="wrapper cover"><img class="cover fadeIn" src="https://bu.dusays.com/2023/06/01/6478963584621.png"/></div><div class="info"><img class="flink-avatar" src="https://bu.dusays.com/2023/06/01/6478968743368.png"/><span class="site-title">Linhk1606</span></div></a></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gsap详解</title>
      <link href="/2025/06/09/gsap%E8%AF%A6%E8%A7%A3/"/>
      <url>/2025/06/09/gsap%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h2 id="1-GSAP-学习笔记-开篇"><a href="#1-GSAP-学习笔记-开篇" class="headerlink" title="1.GSAP 学习笔记 - 开篇"></a>1.GSAP 学习笔记 - 开篇</h2><p>在这篇笔记中，我们将一起探索强大的 JavaScript 动画库 GSAP (GreenSock Animation Platform)，它已经成为许多专业开发者在 Web 上创建高性能、复杂动画的首选工具。我将基于官方文档、权威教程以及我们在实践中积累的经验，逐步展开，希望能帮助我们系统地掌握 GSAP。</p><h3 id="GSAP-简介"><a href="#GSAP-简介" class="headerlink" title="GSAP 简介"></a>GSAP 简介</h3><p>GSAP，全称为 GreenSock Animation Platform，是一款业界领先的、高度灵活的 JavaScript 动画库。在 Web 前端开发领域，尤其是在需要创建流畅、高性能、富有创意的动画效果时，GSAP 常常是我们的首选工具。它不仅仅能够对 HTML DOM 元素进行动画处理，其强大的能力几乎可以操作任何 JavaScript 可以触及的对象和属性，包括 SVG、Canvas、WebGL (如 Three.js, Pixi.js)、甚至普通的 JavaScript 对象属性。</p><p>我们选择 GSAP 的原因有很多，其中最核心的优势在于：</p><ul><li><strong>强大的功能集与专业性：</strong> GSAP 提供了 <code>.to()</code>, <code>.from()</code>, <code>.fromTo()</code>, <code>.set()</code> 等核心动画方法，以及 <code>Timeline</code>（时间线）这一强大的工具来管理复杂的动画序列。它支持几乎所有的数值型属性动画，并且能够精确控制动画的缓动（ease）、持续时间（duration）、延迟（delay）、重复（repeat）、往返（yoyo）等。它的 API 设计直观且功能丰富，满足从简单过渡到复杂交互动画的所有需求。</li><li><strong>极致的性能与流畅度：</strong> GSAP 在设计时就将性能放在了首位。它优化了动画计算过程，并能智能地利用浏览器的硬件加速（如通过 CSS <code>transform</code> 和 <code>opacity</code> 属性），最大程度地减少重排（reflow）和重绘（repaint），确保动画在各种设备和浏览器上都能保持流畅。</li><li><strong>出色的兼容性：</strong> 无论我们面对的是哪个主流浏览器（包括一些旧版本），GSAP 都能提供一致且可靠的动画表现。它自动处理了各种浏览器兼容性问题，让我们无需为此操心。同时，它与现代前端框架（如 React, Vue, Angular）也能很好地集成。</li><li><strong>丰富的插件生态：</strong> GSAP 提供了许多官方插件，用于扩展其核心功能，解决特定的动画挑战。例如，<code>ScrollTrigger</code> 插件可以轻松实现基于滚动的动画；<code>MorphSVGPlugin</code> 用于 SVG 路径变形；<code>TextPlugin</code> 用于逐字或逐行文本动画等。这使得 GSAP 能适应更多样化的项目需求。</li><li><strong>专业支持与活跃社区：</strong> 作为一款成熟的商业级工具（核心功能免费，部分高级插件需要付费订阅 Club GreenSock），GSAP 拥有专业的开发团队和非常活跃的社区论坛，遇到问题时能够快速获得帮助和解决方案。</li></ul><p>简而言之，如果我们的项目对动画的性能、复杂度和控制精度有较高要求，GSAP 无疑是一个值得投入学习和使用的强大武器。</p><h3 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h3><p>再开始之前可以去阅读我的这个博客<a href="https://blog.csdn.net/m0_68190401/article/details/148445418?spm=1001.2014.3001.5501">Tailwindcss4.0最新版本集成指南，全网最全新的指南，包含Uniapp集成，Daisyui集成，插件推荐，部署环境优化！-CSDN博客</a></p><p>搭建一个集成Tailwindcss+daisyui+scss的开发框架用于学习</p><h3 id="GSAP-入门"><a href="#GSAP-入门" class="headerlink" title="GSAP 入门"></a>GSAP 入门</h3><p>开始使用 GSAP 非常简单，主要有两种方式：通过包管理器安装（推荐用于现代前端项目）或通过 CDN 引入（适合快速测试或简单页面）。</p><h4 id="1-安装-GSAP"><a href="#1-安装-GSAP" class="headerlink" title="1. 安装 GSAP"></a>1. 安装 GSAP</h4><p><strong>方式一：使用 NPM 或 pnpm (推荐)</strong></p><p>这是在现代前端项目（使用 Webpack, Vite, Parcel 等模块打包工具）中最常用的方式。</p><p>首先, 打开我们的项目终端，运行安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 npm</span></span><br><span class="line">npm install gsap</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用 pnpm</span></span><br><span class="line">pnpm install gsap</span><br></pre></td></tr></table></figure><p>安装完成后，GSAP 的核心库就会被添加到项目的 <code>node_modules</code> 文件夹中，并且记录在 <code>package.json</code> 文件里。</p><p><strong>方式二：通过 CDN 引入</strong></p><p>这种方式不需要本地安装，直接在 HTML 文件的 <code>&lt;head&gt;</code> 或 <code>&lt;body&gt;</code> 标签内通过 <code>&lt;script&gt;</code> 标签引入 GSAP 脚本即可。这对于快速原型开发、Codepen 演示或不使用模块打包工具的传统网页非常方便。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong> 上述 CDN 链接中的版本号 <code>3.12.5</code> 应根据 GSAP 官方网站提供的最新稳定版本进行更新。我们可以在 GSAP 官网的 <a href="https://greensock.com/get-started/">Get Started 页面</a> 找到最新的 CDN 链接。</p></blockquote><h4 id="2-在项目中引入-GSAP"><a href="#2-在项目中引入-GSAP" class="headerlink" title="2. 在项目中引入 GSAP"></a>2. 在项目中引入 GSAP</h4><p>安装完成后，我们需要在 JavaScript 文件中引入 GSAP 才能开始使用它的 API。</p><p><strong>如果使用 NPM&#x2F;Yarn (模块化项目):</strong></p><p>在需要使用 GSAP 的 JavaScript 文件的顶部，使用 ES Module 的 <code>import</code> 语法导入 <code>gsap</code> 对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 现在我们可以使用 gsap 对象来创建动画了</span></span><br><span class="line"><span class="comment">// 例如：</span></span><br><span class="line"><span class="comment">// gsap.to(&quot;.my-element&quot;, &#123; x: 100, duration: 1 &#125;);</span></span><br></pre></td></tr></table></figure><p>如果我们还需要使用 GSAP 的插件（Plugin），例如后面可能会用到的 <code>ScrollTrigger</code> 或 <code>TextPlugin</code>，通常需要单独导入并注册它们。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入 GSAP 核心</span></span><br><span class="line"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入 ScrollTrigger 插件</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ScrollTrigger</span> &#125; <span class="keyword">from</span> <span class="string">&quot;gsap/ScrollTrigger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册插件 - 使用插件前必须执行此步骤</span></span><br><span class="line">gsap.<span class="title function_">registerPlugin</span>(<span class="title class_">ScrollTrigger</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 现在我们可以使用 ScrollTrigger 功能了</span></span><br><span class="line"><span class="comment">// ScrollTrigger.create(&#123;...&#125;);</span></span><br></pre></td></tr></table></figure><p><strong>如果使用 CDN 引入:</strong></p><p>通过 CDN 引入的方式会将 <code>gsap</code> 对象直接暴露在全局的 <code>window</code> 对象下。所以我们无需额外的 <code>import</code> 或 <code>require</code> 语句，可以直接在脚本中使用 <code>gsap</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>GSAP CDN Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123; <span class="attribute">width</span>: <span class="number">100px</span>; <span class="attribute">height</span>: <span class="number">100px</span>; <span class="attribute">background-color</span>: lightblue; &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// GSAP 对象已经全局可用</span></span></span><br><span class="line"><span class="language-javascript">        gsap.<span class="title function_">to</span>(<span class="string">&quot;.box&quot;</span>, &#123; <span class="attr">x</span>: <span class="number">200</span>, <span class="attr">duration</span>: <span class="number">1</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>踩坑点提示：</strong></p><ul><li><strong>插件注册：</strong> 切记在使用 GSAP 插件之前，一定要通过 <code>gsap.registerPlugin(PluginName)</code> 方法进行注册。否则即使导入了插件文件，它的功能也不会生效。</li><li><strong>CDN 版本：</strong> 通过 CDN 引入时，务必关注版本号。生产环境中建议锁定版本，避免因 CDN 文件更新导致意外问题。不同版本的 API 可能存在细微差异（尽管 v3 版本后稳定性很高）。</li><li><strong>模块化环境与全局对象：</strong> 在模块化项目中，GSAP 不会默认挂载到 <code>window</code> 对象。只能通过 <code>import</code> 导入后使用。如果需要在全局访问，可以显式地将其挂载到 <code>window</code>。</li></ul></blockquote><h2 id="2-核心动画概念-Tweens"><a href="#2-核心动画概念-Tweens" class="headerlink" title="2. 核心动画概念 (Tweens)"></a>2. 核心动画概念 (Tweens)</h2><p>在 GSAP 中，动画的基本构建块是 <em>Tween</em>（补间动画）。一个 Tween 定义了一个或多个目标元素、动画将持续多长时间、以及目标元素的哪些属性将从一个值变化到另一个值。我们通过 <code>gsap</code> 对象上提供的方法来创建 Tween，这些方法本质上是创建和返回一个 Tween 实例，但为了方便使用，通常我们直接调用这些静态方法来驱动动画。</p><p>我们将深入了解最核心的四个方法：<code>gsap.to()</code>, <code>gsap.from()</code>, <code>gsap.fromTo()</code>, 和 <code>gsap.set()</code>。</p><h3 id="1-核心动画方法详解"><a href="#1-核心动画方法详解" class="headerlink" title="1. 核心动画方法详解"></a>1. 核心动画方法详解</h3><p>这四个方法是我们在 GSAP 中创建动画的基石。它们的参数结构相似，但作用不同。基本语法如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title class_">Method</span>(target, vars)</span><br></pre></td></tr></table></figure><p>或对于 <code>fromTo</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">fromTo</span>(target, fromVars, toVars)</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>target</code>: 指定动画作用的目标元素或对象。</li><li><code>vars</code> (或 <code>fromVars</code>, <code>toVars</code>): 一个 JavaScript 对象，包含需要动画的属性以及控制动画行为的特殊参数。</li></ul><h4 id="1-1-gsap-to-target-vars"><a href="#1-1-gsap-to-target-vars" class="headerlink" title="1.1 gsap.to(target, vars)"></a>1.1 <code>gsap.to(target, vars)</code></h4><p>这是最常用的方法。它将目标元素的当前属性值动画到 <code>vars</code> 对象中指定的目标值。</p><p><strong>使用场景:</strong> 当我们想让元素从屏幕上的某个位置移动到另一个位置，或者从当前大小缩放到某个新大小时，<code>gsap.to()</code> 是首选。它假定动画的起始状态就是元素当前的渲染状态。</p><p><strong>示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box to-example&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.to-example</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#4CAF50</span>; <span class="comment">/* Green */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 在组件挂载后应用动画</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 使用 gsap.to 方法应用动画</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 第一个参数是目标元素的选择器</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 第二个参数是动画属性的配置对象</span></span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">to</span>(<span class="string">&quot;.to-example&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">x</span>: <span class="number">200</span>,            <span class="comment">// 元素在 x 轴上移动 200px</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">rotation</span>: <span class="number">360</span>,     <span class="comment">// 旋转 360度 (使用 CSS transform 的 rotate)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">duration</span>: <span class="number">1</span>,       <span class="comment">// 动画持续时间为 1 秒</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ease</span>: <span class="string">&quot;power2.out&quot;</span>, <span class="comment">// 缓动函数，使动画更自然</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">repeat</span>: -<span class="number">1</span>, <span class="comment">// 无限循环</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">yoyo</span>: <span class="literal">true</span>, <span class="comment">// 动画结束后反向播放</span></span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，元素从它最初的静止位置开始，动画到 <code>x: 200</code> 和 <code>rotation: 360</code> 的状态，并且使用了无限循环以及反向播放实现了无限滚动的效果</p><p><img src="https://tc.z.wiki/autoupload/20250605/w4uW/1910X165/PixPin-2025-06-05-08-59-56.gif"></p><h4 id="1-2-gsap-from-target-vars"><a href="#1-2-gsap-from-target-vars" class="headerlink" title="1.2 gsap.from(target, vars)"></a>1.2 <code>gsap.from(target, vars)</code></h4><p>与 <code>gsap.to()</code> 相反，<code>gsap.from()</code> 方法将目标元素从 <code>vars</code> 对象中指定的起始值动画到元素当前的属性值。</p><p><strong>使用场景:</strong> 当我们想让元素从屏幕外飞入、从不可见状态淡入、或从缩小的状态放大到其默认大小等“入场”动画时，<code>gsap.from()</code> 非常方便。它会自动确定动画的结束状态（即元素当前的渲染状态）。</p><p><strong>注意:</strong> <code>gsap.from()</code> 默认会在动画开始前立即设置目标元素的属性到 <code>vars</code> 中指定的起始值（<code>immediateRender: true</code>）。这通常是我们想要的效果，但如果不需要立即设置，可以手动关闭 <code>immediateRender</code>。</p><p><strong>示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box from-example&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.from-example</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#FF9800</span>;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* Orange */</span></span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 元素初始静止状态可能已经有样式，from 会动画到这个状态 */</span></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 比如，如果这个元素本来就在页面中心，from(..., &#123;x: -200&#125;) 就会从左边移入到中心 */</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 在组件挂载后应用动画</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">from</span>(<span class="string">&quot;.from-example&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">x</span>: -<span class="number">200</span>,      <span class="comment">// 从左侧 -200px 开始</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">opacity</span>: <span class="number">0</span>,   <span class="comment">// 从完全透明开始</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">duration</span>: <span class="number">1</span>,  <span class="comment">// 持续 1 秒</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">delay</span>: <span class="number">0.5</span>,    <span class="comment">// 延迟 0.5 秒开始</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">repeat</span>: -<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">yoyo</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ease</span>: <span class="string">&quot;power2.out&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，元素先被 GSAP 立即设置到 <code>x: -200</code>, <code>opacity: 0</code> 的状态（假设它原本不在那儿），然后动画回到它在 CSS 中定义的或之前的 JS 设置的状态。</p><p><img src="https://tc.z.wiki/autoupload/20250605/kunl/0X0/PixPin-2025-06-05-09-06-50.webp"></p><h4 id="1-3-gsap-fromTo-target-fromVars-toVars"><a href="#1-3-gsap-fromTo-target-fromVars-toVars" class="headerlink" title="1.3 gsap.fromTo(target, fromVars, toVars)"></a>1.3 <code>gsap.fromTo(target, fromVars, toVars)</code></h4><p>这个方法同时指定动画的起始状态 (<code>fromVars</code>) 和结束状态 (<code>toVars</code>)。它提供了对动画过程最精确的控制，不依赖元素的当前状态。</p><p><strong>使用场景:</strong> 当我们需要精确控制动画的起点和终点，不希望动画受到元素之前状态的影响时，或者在创建动画序列、循环动画时，<code>gsap.fromTo()</code> 非常有用。</p><p><strong>注意:</strong> 类似 <code>gsap.from()</code>, <code>gsap.fromTo()</code> 默认也会立即设置目标属性到 <code>fromVars</code> 中的起始值（<code>immediateRender: true</code>）。</p><p><strong>示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box fromto-example&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.fromto-example</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#2196F3</span>;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* Blue */</span></span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 在组件挂载后应用动画</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 让 .fromto-example 元素从 x=-300px, 缩放为 0 的状态开始，</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 动画到 x=300px, 缩放为 1.2 的状态，持续 1.5 秒</span></span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">fromTo</span>(<span class="string">&quot;.fromto-example&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">x</span>: -<span class="number">300</span>, <span class="attr">scale</span>: <span class="number">0</span> &#125;, <span class="comment">// 起始状态</span></span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">x</span>: <span class="number">300</span>, <span class="attr">scale</span>: <span class="number">1.2</span>, <span class="attr">duration</span>: <span class="number">1.5</span>, <span class="attr">repeat</span>: -<span class="number">1</span>, <span class="attr">yoyo</span>: <span class="literal">true</span> &#125; <span class="comment">// 结束状态及动画参数</span></span></span><br><span class="line"><span class="language-javascript">  );</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个例子明确指定了动画从 <code>x: -300, scale: 0</code> 开始，到 <code>x: 300, scale: 1.2</code> 结束，动画持续 1.5 秒。无论元素动画前是什么状态，都会被忽略。</p><p><img src="https://tc.z.wiki/autoupload/20250605/7864/0X0/PixPin-2025-06-05-09-10-56.webp"></p><h4 id="1-4-gsap-set-target-vars"><a href="#1-4-gsap-set-target-vars" class="headerlink" title="1.4 gsap.set(target, vars)"></a>1.4 <code>gsap.set(target, vars)</code></h4><p><code>gsap.set()</code> 方法立即将目标元素的属性设置为 <code>vars</code> 对象中指定的值，没有任何动画过程。它等同于一个 <code>gsap.to()</code> 动画，但 <code>duration</code> 为 0。</p><p><strong>使用场景:</strong> 在动画开始前初始化元素的某些状态、在动画序列中快速改变元素属性而不希望有过渡效果、或者在某些条件下需要立即重置元素状态时使用。</p><p><strong>示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box set-example&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.set-example</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#9C27B0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* Purple */</span></span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 在组件挂载后应用动画</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">set</span>(<span class="string">&quot;.set-example&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">y</span>: -<span class="number">50</span>, <span class="comment">// 立即设置 x 属性为 100px</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">opacity</span>: <span class="number">0.5</span> <span class="comment">// 立即设置不透明度为 0.5</span></span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">to</span>(<span class="string">&quot;.set-example&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">y</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">opacity</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">duration</span>: <span class="number">0.8</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">delay</span>: <span class="number">0.5</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ease</span>: <span class="string">&quot;power2.out&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">repeat</span>: -<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">yoyo</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// set 通常用于在动画前设置初始状态</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 例如：</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// gsap.set(&quot;.another-box&quot;, &#123; y: -50, opacity: 0 &#125;); // 设置一个元素在屏幕上方且不可见</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// gsap.to(&quot;.another-box&quot;, &#123; y: 0, opacity: 1, duration: 0.8, delay: 0.5 &#125;); // 然后动画入场</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>gsap.set()</code> 不会产生动画，只会瞬间改变属性。</p><p><img src="https://tc.z.wiki/autoupload/20250605/IdPT/0X0/PixPin-2025-06-05-09-18-03.webp"></p><hr><h4 id="1-5-阶段案例小结：核心方法演练"><a href="#1-5-阶段案例小结：核心方法演练" class="headerlink" title="1.5 阶段案例小结：核心方法演练"></a>1.5 阶段案例小结：核心方法演练</h4><p>到目前为止，我们已经学习了 GSAP 中最基础也是最重要的四个核心动画方法：<code>gsap.to()</code>, <code>gsap.from()</code>, <code>gsap.fromTo()</code> 和 <code>gsap.set()</code>。为了更好地理解它们各自的特点和适用场景，让我们通过一个小综合案例来回顾和演练。</p><p>在这个案例中，我们将创建几个简单的 DOM 元素，并分别使用这四种方法为它们添加动画效果。我们将使用 Tailwind CSS 来快速设置一些基础样式。</p><p><strong>预期效果预览：</strong></p><ul><li>一个紫色方块会使用 <code>gsap.set()</code> 立即改变其初始状态（例如，透明度和位置）。</li><li>一个蓝色圆形会使用 <code>gsap.from()</code> 从屏幕外（或某个预设的不可见状态）动画入场。</li><li>一个绿色方块会使用 <code>gsap.to()</code> 进行一个持续的、往返的动画。</li><li>一个红色长方形会使用 <code>gsap.fromTo()</code> 执行一个从明确的起始状态到明确的结束状态的动画。</li></ul><p><img src="https://tc.z.wiki/autoupload/20250605/Lur4/0X0/PixPin-2025-06-05-09-29-13.webp"></p><p><strong>代码实现：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;case-container p-8 bg-gray-100 flex flex-col space-y-12 items-center min-h-screen&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-set bg-purple-500 w-24 h-24 rounded-lg shadow-lg&quot;</span>&gt;</span>Set<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-from bg-blue-500 w-24 h-24 rounded-full shadow-lg&quot;</span>&gt;</span>From<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-to bg-green-500 w-24 h-24 shadow-lg&quot;</span>&gt;</span>To<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-fromto bg-red-500 w-32 h-16 rounded-md shadow-lg&quot;</span>&gt;</span>FromTo<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 使用 gsap.set() 初始化元素状态</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 目标：.box-set 紫色方块</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 效果：立即将其透明度设置为 0.6，并向右移动 50px，同时稍微旋转。</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//       这通常用于在动画开始前设定元素的初始视觉状态，而不需要动画过程。</span></span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">set</span>(<span class="string">&quot;.box-set&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">opacity</span>: <span class="number">0.6</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">x</span>: <span class="number">50</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">rotation</span>: <span class="number">15</span></span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 使用 gsap.from() 创建入场动画</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 目标：.box-from 蓝色圆形</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 效果：使其从左侧屏幕外（x: -300）、完全透明（opacity: 0）、缩小（scale: 0.3）的状态，</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//       动画到其在 HTML/CSS 中定义的原始状态。</span></span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">from</span>(<span class="string">&quot;.box-from&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">x</span>: -<span class="number">300</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">opacity</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">scale</span>: <span class="number">0.3</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">duration</span>: <span class="number">1.2</span>, <span class="comment">// 动画持续 1.2 秒</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ease</span>: <span class="string">&quot;power2.out&quot;</span> <span class="comment">// 使用 power2.out 缓动，使动画出场更自然</span></span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 3. 使用 gsap.to() 创建持续或往返动画</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 目标：.box-to 绿色方块</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 效果：使其从当前状态开始，向右移动 150px，同时旋转 90 度。</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//       这个动画会无限重复（repeat: -1）并且每次重复时会反向播放（yoyo: true）。</span></span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">to</span>(<span class="string">&quot;.box-to&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">x</span>: <span class="number">150</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">rotation</span>: <span class="number">90</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">duration</span>: <span class="number">2</span>, <span class="comment">// 动画持续 2 秒</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">repeat</span>: -<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">yoyo</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ease</span>: <span class="string">&quot;sine.inOut&quot;</span> <span class="comment">// 使用平滑的正弦缓动</span></span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 4. 使用 gsap.fromTo() 创建精确的始末状态动画</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 目标：.box-fromto 红色长方形</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 效果：明确指定动画的起始状态（左偏、透明、缩小、反向旋转）</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//       和结束状态（右偏、完全不透明、原始大小、正向旋转）。</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//       无论元素原始状态如何，都会从 fromVars 动画到 toVars。</span></span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">fromTo</span>(<span class="string">&quot;.box-fromto&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="comment">// 起始状态 (fromVars)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">x</span>: -<span class="number">150</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">opacity</span>: <span class="number">0.2</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">scale</span>: <span class="number">0.4</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">rotation</span>: -<span class="number">45</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="comment">// 结束状态 (toVars)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">x</span>: <span class="number">150</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">opacity</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">scale</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">rotation</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">duration</span>: <span class="number">2.5</span>, <span class="comment">// 动画持续 2.5 秒</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">delay</span>: <span class="number">0.5</span>, <span class="comment">// 延迟 0.5 秒开始，让其他动画先展示一下</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">ease</span>: <span class="string">&quot;elastic.out(1, 0.4)&quot;</span> <span class="comment">// 使用弹性缓动，增加趣味性</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  );</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 为 Tailwind CSS 类应用一些通用样式，如文字居中和颜色 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.case-container</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-family</span>: sans-serif;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box-set</span>, <span class="selector-class">.box-from</span>, <span class="selector-class">.box-to</span>, <span class="selector-class">.box-fromto</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过这个简单的综合案例，我们可以更直观地体会到 <code>set</code>, <code>from</code>, <code>to</code>, <code>fromTo</code> 四个核心方法在不同场景下的应用和它们之间的区别。熟练掌握这些方法是学习 GSAP 动画的基石。</p><hr><h3 id="2-目标元素-Target-获取"><a href="#2-目标元素-Target-获取" class="headerlink" title="2. 目标元素 (Target) 获取"></a>2. 目标元素 (Target) 获取</h3><p><code>target</code> 参数告诉 GSAP 应该对哪个元素或对象进行动画。GSAP 提供了多种灵活的方式来指定目标：</p><h4 id="2-1-CSS-选择器字符串"><a href="#2-1-CSS-选择器字符串" class="headerlink" title="2.1 CSS 选择器字符串"></a>2.1 CSS 选择器字符串</h4><p>最常见和方便的方式是使用标准的 CSS 选择器字符串。GSAP 会自动找到匹配该选择器的所有元素，并将动画应用到每个匹配的元素上。如果匹配多个元素，它们将默认同时开始动画，但我们可以使用 <code>stagger</code> 参数来创建交错效果。</p><p><img src="https://tc.z.wiki/autoupload/20250605/8b6q/0X0/PixPin-2025-06-05-09-40-51.webp"></p><p><strong>示例:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(<span class="string">&quot;.my-class&quot;</span>, &#123; ... &#125;); <span class="comment">// 匹配所有 class=&quot;my-class&quot; 的元素</span></span><br><span class="line">gsap.<span class="title function_">from</span>(<span class="string">&quot;#my-id&quot;</span>, &#123; ... &#125;);   <span class="comment">// 匹配 id=&quot;my-id&quot; 的单个元素</span></span><br><span class="line">gsap.<span class="title function_">to</span>(<span class="string">&quot;div&quot;</span>, &#123; ... &#125;);        <span class="comment">// 匹配所有 &lt;div&gt; 元素</span></span><br><span class="line">gsap.<span class="title function_">fromTo</span>(<span class="string">&quot;.container div&quot;</span>, &#123; ... &#125;, &#123; ... &#125;); <span class="comment">// 匹配 .container 内的所有 &lt;div&gt; 元素</span></span><br></pre></td></tr></table></figure><p><strong>代码案例示例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container mx-auto p-4&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box stagger-example&quot; v-for=&quot;i in 5&quot; :key=&quot;i&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; gsap &#125; from &quot;gsap&quot;;</span><br><span class="line">import &#123; onMounted &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">// 在组件挂载后应用动画</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  // 首先设置所有元素的初始状态</span><br><span class="line">  gsap.set(&quot;.stagger-example&quot;, &#123;</span><br><span class="line">    x: -100,</span><br><span class="line">    opacity: 0</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  // 然后使用 stagger 参数创建交错动画效果</span><br><span class="line">  gsap.to(&quot;.stagger-example&quot;, &#123;</span><br><span class="line">    x: 0,</span><br><span class="line">    opacity: 1,</span><br><span class="line">    duration: 0.8,</span><br><span class="line">    stagger: 0.2, // 每个元素之间延迟0.2秒开始动画</span><br><span class="line">    ease: &quot;power2.out&quot;,</span><br><span class="line">    repeat: -1,</span><br><span class="line">    yoyo: true,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  // stagger 还可以有更多高级配置</span><br><span class="line">  // 例如：</span><br><span class="line">  // gsap.to(&quot;.stagger-example&quot;, &#123;</span><br><span class="line">  //   y: 20,</span><br><span class="line">  //   duration: 1,</span><br><span class="line">  //   stagger: &#123;</span><br><span class="line">  //     each: 0.3,       // 每个元素之间的间隔时间</span><br><span class="line">  //     from: &quot;center&quot;,  // 从中间元素开始</span><br><span class="line">  //     grid: &quot;auto&quot;,    // 可以基于网格布局创建交错效果</span><br><span class="line">  //     ease: &quot;power2.inOut&quot; // 甚至可以为交错本身设置缓动函数</span><br><span class="line">  //   &#125;</span><br><span class="line">  // &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.stagger-example &#123;</span><br><span class="line">  width: 80px;</span><br><span class="line">  height: 80px;</span><br><span class="line">  background-color: #00f61d;</span><br><span class="line">  /* Green */</span><br><span class="line">  margin-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="2-2-DOM-元素引用"><a href="#2-2-DOM-元素引用" class="headerlink" title="2.2 DOM 元素引用"></a>2.2 DOM 元素引用</h4><p>我们也可以直接传递一个或多个 DOM 元素的 JavaScript 引用作为 <code>target</code>。</p><p><strong>示例:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> singleElement = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.single-box&quot;</span>);</span><br><span class="line">gsap.<span class="title function_">to</span>(singleElement, &#123; <span class="attr">x</span>: <span class="number">100</span>, <span class="attr">duration</span>: <span class="number">1</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> multipleElements = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.multiple-boxes&quot;</span>);</span><br><span class="line"><span class="comment">// 当 target 是一个 NodeList 或数组时，GSAP 会对其中每个元素应用动画</span></span><br><span class="line">gsap.<span class="title function_">to</span>(multipleElements, &#123; <span class="attr">rotation</span>: <span class="number">360</span>, <span class="attr">duration</span>: <span class="number">1</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果我们想把多个分开的元素放在一个数组里作为目标</span></span><br><span class="line"><span class="keyword">const</span> element1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box1&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> element2 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box2&quot;</span>);</span><br><span class="line">gsap.<span class="title function_">to</span>([element1, element2], &#123; <span class="attr">y</span>: <span class="number">50</span>, <span class="attr">duration</span>: <span class="number">0.5</span> &#125;);</span><br></pre></td></tr></table></figure><h4 id="2-3-普通-JavaScript-对象或数组"><a href="#2-3-普通-JavaScript-对象或数组" class="headerlink" title="2.3 普通 JavaScript 对象或数组"></a>2.3 普通 JavaScript 对象或数组</h4><p>GSAP 的强大之处在于它不仅能动画 DOM 元素，还能动画任何普通 JavaScript 对象的数值属性。这在 Canvas、WebGL 或动画化游戏中的对象属性时非常有用。</p><p><strong>示例一:</strong></p><blockquote><p>操作单个对象</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container mx-auto&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;w-full h-10 bg-gray-200 mb-4 rounded-md overflow-hidden&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;h-full bg-blue-500 transition-all&quot; :style=&quot;&#123; width: `$&#123;progress&#125;%` &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button class=&quot;btn btn-primary&quot; @click=&quot;startAnimation&quot;&gt;开始动画&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, onMounted &#125; from &#x27;vue&#x27;;</span><br><span class="line">import gsap from &#x27;gsap&#x27;;</span><br><span class="line"></span><br><span class="line">const progress = ref(0);</span><br><span class="line">// 定义一个开始动画的函数，延迟一秒后开始动画，动画持续2秒，动画的值从0到100</span><br><span class="line">const startAnimation = () =&gt; &#123;</span><br><span class="line">  progress.value = 0;</span><br><span class="line">  gsap.to(progress, &#123;</span><br><span class="line">    duration: 2,</span><br><span class="line">    value: 100,</span><br><span class="line">    delay: 1,</span><br><span class="line">    onUpdate: () =&gt; &#123;</span><br><span class="line">      console.log(progress.value);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  startAnimation();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://tc.z.wiki/autoupload/20250605/FPId/0X0/PixPin-2025-06-05-11-15-06.webp"></p><p><strong>示例2：</strong></p><blockquote><p>操作对象数组</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container mx-auto&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;grid grid-cols-5 gap-4&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-for=&quot;item in objectsArray&quot;</span><br><span class="line">        :key=&quot;item.value&quot;</span><br><span class="line">        class=&quot;w-full h-10 bg-gray-200 rounded-md&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          class=&quot;h-full transition-all&quot;</span><br><span class="line">          :class=&quot;item.color&quot;</span><br><span class="line">          :style=&quot;&#123; width: `$&#123;item.value&#125;%` &#125;&quot;</span><br><span class="line">        &gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button class=&quot;btn btn-primary&quot; @click=&quot;startAnimation&quot;&gt;开始动画&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; onMounted, reactive &#125; from &#x27;vue&#x27;</span><br><span class="line">import gsap from &#x27;gsap&#x27;</span><br><span class="line"></span><br><span class="line">// 为每个对象分配不同的颜色类</span><br><span class="line">const colorClasses = [</span><br><span class="line">  &#x27;bg-blue-500&#x27;,</span><br><span class="line">  &#x27;bg-green-500&#x27;,</span><br><span class="line">  &#x27;bg-red-500&#x27;,</span><br><span class="line">  &#x27;bg-yellow-500&#x27;,</span><br><span class="line">  &#x27;bg-purple-500&#x27;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">const objectsArray = reactive([</span><br><span class="line">  &#123; value: 10, color: colorClasses[0] &#125;,</span><br><span class="line">  &#123; value: 20, color: colorClasses[1] &#125;,</span><br><span class="line">  &#123; value: 30, color: colorClasses[2] &#125;,</span><br><span class="line">  &#123; value: 40, color: colorClasses[3] &#125;,</span><br><span class="line">  &#123; value: 50, color: colorClasses[4] &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">// 定义一个开始动画的函数，动画的值从0到100</span><br><span class="line">const startAnimation = () =&gt; &#123;</span><br><span class="line">  objectsArray.forEach(item =&gt; &#123;</span><br><span class="line">    item.value = 0</span><br><span class="line">  &#125;)</span><br><span class="line">  gsap.to(objectsArray, &#123;</span><br><span class="line">    value: 100,</span><br><span class="line">    duration: 2,</span><br><span class="line">    stagger: 0.2,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  startAnimation()</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://tc.z.wiki/autoupload/20250605/BY7H/0X0/PixPin-2025-06-05-11-21-34.webp"></p><h3 id="3-变量参数-Variables-Properties"><a href="#3-变量参数-Variables-Properties" class="headerlink" title="3. 变量参数 (Variables&#x2F;Properties)"></a>3. 变量参数 (Variables&#x2F;Properties)</h3><p><code>vars</code> 对象是 Tween 的“大脑”，它定义了动画的目标属性值以及各种控制动画行为的特殊参数。</p><h4 id="3-1-标准-CSS-属性"><a href="#3-1-标准-CSS-属性" class="headerlink" title="3.1 标准 CSS 属性"></a>3.1 标准 CSS 属性</h4><p>我们可以动画几乎所有标准的 CSS 属性，只要它们的值是数值型的。例如：</p><ul><li>位置&#x2F;尺寸：<code>width</code>, <code>height</code>, <code>paddingTop</code>, <code>marginBottom</code> 等 (注意这些可能会引起重排，影响性能)</li><li>颜色：<code>color</code>, <code>backgroundColor</code>, <code>borderColor</code> 等 (GSAP 会自动处理颜色值的过渡)</li><li>字体：<code>fontSize</code>, <code>lineHeight</code> 等</li><li>视觉：<code>opacity</code>, <code>visibility</code> 等</li></ul><p><strong>示例:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(<span class="string">&quot;.box&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">backgroundColor</span>: <span class="string">&quot;#ff0000&quot;</span>, <span class="comment">// 动画背景色到红色</span></span><br><span class="line">  <span class="attr">width</span>: <span class="string">&quot;200px&quot;</span>,            <span class="comment">// 动画宽度到 200px</span></span><br><span class="line">  <span class="attr">fontSize</span>: <span class="string">&quot;24px&quot;</span>,          <span class="comment">// 动画字体大小</span></span><br><span class="line">  <span class="attr">opacity</span>: <span class="number">0.5</span>,              <span class="comment">// 动画不透明度到 0.5</span></span><br><span class="line">  <span class="attr">duration</span>: <span class="number">1</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="代码案例示例-灵动文字："><a href="#代码案例示例-灵动文字：" class="headerlink" title="代码案例示例 - 灵动文字："></a><strong>代码案例示例 - 灵动文字</strong>：</h5><p><img src="https://tc.z.wiki/autoupload/20250605/KAze/0X0/PixPin-2025-06-05-11-42-28.webp"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;font-gradient-demo bg-slate-900 p-10 py-20 min-h-[350px] flex justify-center items-center&quot;&gt;</span><br><span class="line">    &lt;h2 id=&quot;animated-gradient-text&quot;</span><br><span class="line">        class=&quot;text-5xl md:text-7xl font-bold cursor-pointer select-none transition-all duration-300&quot;</span><br><span class="line">        style=&quot;</span><br><span class="line">          /* 定义一个多彩的线性渐变作为背景图像 */</span><br><span class="line">          background-image: linear-gradient(</span><br><span class="line">            90deg,</span><br><span class="line">            #ff7e5f, /* 亮珊瑚红 */</span><br><span class="line">            #feb47b, /* 柔和杏色 */</span><br><span class="line">            #86A8E7, /* 淡雅蓝 */</span><br><span class="line">            #7F7FD5, /* 温柔紫 */</span><br><span class="line">            #ff7e5f  /* 回到亮珊瑚红，形成循环 */</span><br><span class="line">          );</span><br><span class="line">          /* 将背景裁剪为文本形状 */</span><br><span class="line">          -webkit-background-clip: text;</span><br><span class="line">          background-clip: text;</span><br><span class="line">          /* 使文本颜色透明，从而显示背景渐变 */</span><br><span class="line">          color: transparent;</span><br><span class="line">          /* 设置背景尺寸大于文本本身，为动画留出空间 */</span><br><span class="line">          background-size: 250% auto; /* 渐变宽度为元素宽度的2.5倍 */</span><br><span class="line">          /* 初始背景位置 */</span><br><span class="line">          background-position: 0% center;</span><br><span class="line">        &quot;&gt;</span><br><span class="line">      Prorise</span><br><span class="line">    &lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; gsap &#125; from &quot;gsap&quot;;</span><br><span class="line">import &#123; onMounted &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  const textElementId = &quot;#animated-gradient-text&quot;;</span><br><span class="line">  const textElement = document.querySelector(textElementId);</span><br><span class="line"></span><br><span class="line">  // 1. 动画文本填充渐变：通过平移背景图像位置实现</span><br><span class="line">  // 我们让 background-position 的 x 轴从 0% 移动到 100%。</span><br><span class="line">  // 由于 background-size 是 250%，当 position 到达 100% 时，相当于渐变的较后部分移入文本。</span><br><span class="line">  // yoyo: true 使其来回播放，形成持续的流动感。</span><br><span class="line">  gsap.to(textElementId, &#123;</span><br><span class="line">    backgroundPosition: &quot;100% center&quot;, // 将渐变背景向右移动，直到其右端对齐元素右端</span><br><span class="line">    duration: 3,                      // 动画持续3秒</span><br><span class="line">    ease: &quot;linear&quot;,                   // 线性缓动，使流动更均匀</span><br><span class="line">    repeat: -1,                       // 无限重复</span><br><span class="line">    yoyo: true                        // 往返播放</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">/* 确保在所有浏览器中渐变文本效果都能正确应用 */</span><br><span class="line">#animated-gradient-text &#123;</span><br><span class="line">  -webkit-text-fill-color: transparent; /* 兼容 Safari */</span><br><span class="line">  /* Tailwind 的 text-5xl 和 md:text-7xl 已在模板中设置了基础字体大小 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.font-gradient-demo &#123;</span><br><span class="line">  /* 增加一个微妙的背景图案或纹理可以使效果更突出，但为保持简洁此处省略 */</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-CSS-变换属性-推荐"><a href="#3-2-CSS-变换属性-推荐" class="headerlink" title="3.2 CSS 变换属性 (推荐)"></a>3.2 CSS 变换属性 (推荐)</h4><p>GSAP 强烈推荐使用 CSS <code>transform</code> 相关的属性进行动画，因为这些属性通常由 GPU 加速，性能远高于直接动画 <code>top</code>, <code>left</code>, <code>margin</code> 等会触发浏览器重排的属性。GSAP 提供了方便的简写来直接操作这些变换属性。</p><p>以下是 GSAP 变量参数中常用的 CSS 变换属性及其等同的 CSS 写法：</p><table><thead><tr><th>GSAP 属性</th><th>等同于 CSS 的属性</th><th>描述</th></tr></thead><tbody><tr><td><code>x</code></td><td><code>transform: translateX(...)</code></td><td>沿 X 轴平移 (px, %)</td></tr><tr><td><code>y</code></td><td><code>transform: translateY(...)</code></td><td>沿 Y 轴平移 (px, %)</td></tr><tr><td><code>z</code></td><td><code>transform: translateZ(...)</code></td><td>沿 Z 轴平移 (px)</td></tr><tr><td><code>xPercent</code></td><td><code>transform: translateX(...)</code></td><td>沿 X 轴平移 (%)，基于元素自身的宽度</td></tr><tr><td><code>yPercent</code></td><td><code>transform: translateY(...)</code></td><td>沿 Y 轴平移 (%)，基于元素自身的高度</td></tr><tr><td><code>rotation</code></td><td><code>transform: rotate(...)</code></td><td>旋转 (deg, rad)</td></tr><tr><td><code>rotationX</code></td><td><code>transform: rotateX(...)</code></td><td>沿 X 轴旋转 (deg, rad)</td></tr><tr><td><code>rotationY</code></td><td><code>transform: rotateY(...)</code></td><td>沿 Y 轴旋转 (deg, rad)</td></tr><tr><td><code>rotationZ</code></td><td><code>transform: rotateZ(...)</code></td><td>沿 Z 轴旋转 (deg, rad)</td></tr><tr><td><code>scale</code></td><td><code>transform: scale(...)</code></td><td>均匀缩放</td></tr><tr><td><code>scaleX</code></td><td><code>transform: scaleX(...)</code></td><td>沿 X 轴缩放</td></tr><tr><td><code>scaleY</code></td><td><code>transform: scaleY(...)</code></td><td>沿 Y 轴缩放</td></tr><tr><td><code>skewX</code></td><td><code>transform: skewX(...)</code></td><td>沿 X 轴倾斜 (deg, rad)</td></tr><tr><td><code>skewY</code></td><td><code>transform: skewY(...)</code></td><td>沿 Y 轴倾斜 (deg, rad)</td></tr><tr><td><code>transformOrigin</code></td><td><code>transform-origin: ...</code></td><td>变换基点（例如 “center center”, “top left”, “20% 80%”）</td></tr><tr><td><code>perspective</code></td><td><code>perspective: ...</code></td><td>3D 变换的视角深度</td></tr><tr><td><code>transformPerspective</code></td><td><code>perspective: ...</code></td><td>与 <code>perspective</code> 类似，用于父元素</td></tr></tbody></table><p><strong>示例:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(<span class="string">&quot;.box&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">x</span>: <span class="number">100</span>,          <span class="comment">// 相当于 translateX(100px)</span></span><br><span class="line">  <span class="attr">yPercent</span>: -<span class="number">50</span>,   <span class="comment">// 相当于 translateY(-50%)</span></span><br><span class="line">  <span class="attr">rotation</span>: <span class="number">90</span>,    <span class="comment">// 相当于 rotate(90deg)</span></span><br><span class="line">  <span class="attr">scale</span>: <span class="number">1.5</span>,      <span class="comment">// 相当于 scale(1.5)</span></span><br><span class="line">  <span class="attr">transformOrigin</span>: <span class="string">&quot;left center&quot;</span>, <span class="comment">// 动画围绕左侧中心点旋转和缩放</span></span><br><span class="line">  <span class="attr">duration</span>: <span class="number">1</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="代码案例-3D卡片交互"><a href="#代码案例-3D卡片交互" class="headerlink" title="代码案例 - 3D卡片交互"></a>代码案例 - 3D卡片交互</h5><p><img src="https://tc.z.wiki/autoupload/20250605/uNqi/0X0/PixPin-2025-06-05-12-10-49.webp"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&quot;interactive-card-demo bg-slate-800 p-10 py-16 flex justify-center items-center min-h-[550px] overflow-hidden&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-perspective-wrapper group&quot; style=&quot;perspective: 1000px;&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&quot;card interactive-3d-card bg-base-100 w-96 shadow-sm transform-style-preserve-3d transition-all duration-500 ease-out&quot;&gt;</span><br><span class="line">        &lt;figure&gt;</span><br><span class="line">          &lt;img</span><br><span class="line">            src=&quot;https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp&quot;</span><br><span class="line">            alt=&quot;Shoes&quot; /&gt;</span><br><span class="line">        &lt;/figure&gt;</span><br><span class="line">        &lt;div class=&quot;card-body&quot;&gt;</span><br><span class="line">          &lt;h2 class=&quot;card-title&quot;&gt;Mountaineering shoes&lt;/h2&gt;</span><br><span class="line">          &lt;p&gt;Mountaineering shoes are your indispensable companion when climbing mountains&lt;/p&gt;</span><br><span class="line">          &lt;div class=&quot;card-actions justify-end&quot;&gt;</span><br><span class="line">            &lt;button class=&quot;btn btn-primary&quot;&gt;Buy Now&lt;/button&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; gsap &#125; from &quot;gsap&quot;;</span><br><span class="line">import &#123; onMounted &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  const cardWrapper = document.querySelector(&#x27;.card-perspective-wrapper&#x27;);</span><br><span class="line">  const cardElement = document.querySelector(&#x27;.interactive-3d-card&#x27;);</span><br><span class="line"></span><br><span class="line">  if (cardWrapper &amp;&amp; cardElement) &#123;</span><br><span class="line">    // 初始化设置</span><br><span class="line">    gsap.set(cardElement, &#123;</span><br><span class="line">      transformOrigin: &quot;center center&quot;, // 确保围绕中心变换</span><br><span class="line">      transformStyle: &quot;preserve-3d&quot;     // 对于嵌套3D元素是好习惯</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    cardWrapper.addEventListener(&#x27;mousemove&#x27;, (event) =&gt; &#123;</span><br><span class="line">      const rect = cardWrapper.getBoundingClientRect();</span><br><span class="line">      // 计算鼠标在卡片包装容器内的相对位置 (0 to 1)</span><br><span class="line">      const mouseX = (event.clientX - rect.left) / rect.width;</span><br><span class="line">      const mouseY = (event.clientY - rect.top) / rect.height;</span><br><span class="line"></span><br><span class="line">      // 将鼠标位置 (0 to 1) 映射到旋转角度 (例如 -15度 to 15度)</span><br><span class="line">      const maxRotation = 15; // 最大旋转角度</span><br><span class="line">      const rotationY = (mouseX - 0.5) * 2 * maxRotation;       // X轴鼠标移动 -&gt; Y轴旋转</span><br><span class="line">      const rotationX = -(mouseY - 0.5) * 2 * maxRotation;      // Y轴鼠标移动 -&gt; X轴旋转 (负号使效果直观)</span><br><span class="line"></span><br><span class="line">      // 使用GSAP平滑动画到目标状态</span><br><span class="line">      gsap.to(cardElement, &#123;</span><br><span class="line">        duration: 0.4, // 快速响应</span><br><span class="line">        rotationX: rotationX,</span><br><span class="line">        rotationY: rotationY,</span><br><span class="line">        scale: 1.05,   // 轻微放大</span><br><span class="line">        z: 25,         // 轻微抬起 (沿Z轴)</span><br><span class="line">        ease: &quot;power1.out&quot;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    cardWrapper.addEventListener(&#x27;mouseleave&#x27;, () =&gt; &#123;</span><br><span class="line">      // 鼠标移开时，平滑恢复到初始状态</span><br><span class="line">      gsap.to(cardElement, &#123;</span><br><span class="line">        duration: 0.6,</span><br><span class="line">        rotationX: 0,</span><br><span class="line">        rotationY: 0,</span><br><span class="line">        scale: 1,</span><br><span class="line">        z: 0,</span><br><span class="line">        ease: &quot;elastic.out(1, 0.6)&quot; // 弹性返回效果</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.interactive-card-demo &#123;</span><br><span class="line">  /* 你可以在这里添加一些全局作用域的样式，如果需要的话 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card-perspective-wrapper:hover .interactive-3d-card &#123;</span><br><span class="line">  /* 可以通过 group-hover (Tailwind) 或 CSS :hover 来增强效果，但GSAP提供了更细致的控制 */</span><br><span class="line">  /* 例如: box-shadow: 0 25px 50px -12px rgba(0, 255, 255, 0.25); */</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="3-3-GSAP-特殊属性"><a href="#3-3-GSAP-特殊属性" class="headerlink" title="3.3 GSAP 特殊属性"></a>3.3 GSAP 特殊属性</h4><p>除了要动画的属性，<code>vars</code> 对象还可以包含一系列控制动画行为的特殊属性。这些属性非常强大，让我们能够精细控制动画的时间、重复、缓动等。</p><p>以下是 GSAP 常用的特殊属性列表：</p><table><thead><tr><th>GSAP 特殊属性</th><th>描述</th><th>常用值 &#x2F; 示例</th></tr></thead><tbody><tr><td><code>duration</code></td><td>动画的持续时间（秒）。</td><td><code>1</code>, <code>0.5</code>, <code>2.3</code></td></tr><tr><td><code>delay</code></td><td>动画开始前的延迟时间（秒）。</td><td><code>0.5</code>, <code>1</code>, <code>&#39;+=0.5&#39;</code> (相对于前一个动画结束延迟)</td></tr><tr><td><code>ease</code></td><td>缓动函数，控制动画的速度曲线。GSAP 提供了丰富的缓动函数，详见第三章</td><td><code>&quot;power1.out&quot;</code>, <code>&quot;back.in(1.7)&quot;</code>, <code>&quot;bounce.out&quot;</code>, <code>&quot;none&quot;</code></td></tr><tr><td><code>repeat</code></td><td>动画重复的次数。</td><td><code>1</code>, <code>2</code> (共播放 1 + 2 &#x3D; 3 次), <code>-1</code> (无限循环)</td></tr><tr><td><code>yoyo</code></td><td>如果为 <code>true</code> 且 <code>repeat &gt; 0</code>，动画在每次重复时会反向播放（往返）。</td><td><code>true</code>, <code>false</code></td></tr><tr><td><code>repeatDelay</code></td><td>每次重复之间的延迟时间（秒）。</td><td><code>0.5</code>, <code>1</code></td></tr><tr><td><code>stagger</code></td><td>用于多个目标元素时，设置每个目标元素动画开始的错开时间（秒）。可以是数值或一个对象。</td><td><code>0.1</code>, <code>&#123; each: 0.1, from: &quot;center&quot; &#125;</code></td></tr><tr><td><code>onComplete</code></td><td>动画完成时触发的回调函数。</td><td><code>function() &#123; console.log(&quot;Done!&quot;); &#125;</code></td></tr><tr><td><code>onStart</code></td><td>动画开始时触发的回调函数。</td><td><code>function() &#123; console.log(&quot;Starting...&quot;); &#125;</code></td></tr><tr><td><code>onUpdate</code></td><td>动画进行中的每一帧都会触发的回调函数。常用于更新 Canvas 绘制或显示动画的当前数值。</td><td><code>function() &#123; console.log(&quot;Animating...&quot;); &#125;</code></td></tr><tr><td><code>onRepeat</code></td><td>每次重复循环（不包括第一次播放）开始时触发的回调函数。</td><td><code>function() &#123; console.log(&quot;Repeating...&quot;); &#125;</code></td></tr><tr><td><code>onCompleteParams</code>&#x2F;<code>onStartParams</code>等</td><td>传递给回调函数的参数数组。</td><td><code>[&quot;param1&quot;, myVar]</code></td></tr><tr><td><code>runBackwards</code></td><td>如果设置为 <code>true</code>，动画将从结束状态向起始状态播放。</td><td><code>true</code>, <code>false</code></td></tr><tr><td><code>immediateRender</code></td><td>如果设置为 <code>true</code>，动画会立即渲染起始状态。<code>from()</code> 和 <code>fromTo()</code> 默认为 <code>true</code>，<code>to()</code> 默认为 <code>false</code>。</td><td><code>true</code>, <code>false</code></td></tr><tr><td><code>lazy</code></td><td>动画是否“懒惰”渲染。默认 <code>true</code>，只在需要时更新。通常无需修改。</td><td><code>true</code>, <code>false</code></td></tr><tr><td><code>overwrite</code></td><td>控制如何处理与当前 Tween 冲突的其他动画。</td><td><code>&quot;auto&quot;</code>, <code>&quot;all&quot;</code>, <code>&quot;none&quot;</code>, <code>true</code>, <code>false</code></td></tr></tbody></table><p><strong>关于后缀 <code>.in</code>, <code>.out</code>, <code>.inOut</code> 的说明:</strong></p><ul><li><strong><code>.in</code> (EaseIn):</strong> 动画在开始时慢，然后逐渐加速。 （缓入）</li><li><strong><code>.out</code> (EaseOut):</strong> 动画在开始时快，然后逐渐减速。 （缓出 - 这是最常用的，GSAP默认缓动 <code>power2.out</code>）</li><li><strong><code>.inOut</code> (EaseInOut):</strong> 动画在开始和结束时都慢，中间速度较快。（缓入缓出）</li></ul><p>例如，<code>power3.inOut</code> 就表示使用三次方曲线，并且在动画的开始和结束阶段都有平滑的加速和减速过程。</p><p><strong>选择缓动函数的建议：</strong></p><ul><li><strong>自然过渡：</strong> <code>power2.out</code> (默认), <code>sine.out</code>, <code>sine.inOut</code> 是很好的起点。</li><li><strong>轻快有力：</strong> <code>back.out</code>, <code>power3.out</code>。</li><li><strong>趣味弹性：</strong> <code>elastic.out</code>, <code>bounce.out</code>。</li><li><strong>特定效果：</strong> <code>steps()</code> 用于帧动画或计数器，<code>elastic</code> &#x2F; <code>bounce</code> 用于模拟物理</li></ul><h4 id="3-4-自定义对象属性"><a href="#3-4-自定义对象属性" class="headerlink" title="3.4 自定义对象属性"></a>3.4 自定义对象属性</h4><p>我们已经知道 GSAP 可以动画普通 JavaScript 对象的属性。这些属性可以是数值，也可以是包含数值的字符串（如颜色、transform 的字符串表示等），GSAP 会自动解析并动画。</p><p><strong>示例:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scoreDisplay = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;score&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> gameState = &#123; <span class="attr">score</span>: <span class="number">0</span>, <span class="attr">level</span>: <span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动画 gameState 对象的 score 属性从 0 到 1000</span></span><br><span class="line">gsap.<span class="title function_">to</span>(gameState, &#123;</span><br><span class="line">  <span class="attr">score</span>: <span class="number">1000</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">onUpdate</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 在动画过程中更新页面上显示的分数</span></span><br><span class="line">    scoreDisplay.<span class="property">textContent</span> = <span class="title class_">Math</span>.<span class="title function_">round</span>(gameState.<span class="property">score</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onComplete</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;分数动画结束！最终得分:&quot;</span>, gameState.<span class="property">score</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动画 level 属性（虽然 level 是整数，但也可以动画）</span></span><br><span class="line">gsap.<span class="title function_">to</span>(gameState, &#123;</span><br><span class="line">  <span class="attr">level</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="attr">delay</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">ease</span>: <span class="string">&quot;steps(4)&quot;</span>, <span class="comment">// 使用 steps 缓动，使 level 值在整数间跳跃</span></span><br><span class="line">  <span class="attr">onComplete</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;关卡动画结束！当前关卡:&quot;</span>, gameState.<span class="property">level</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="3-5-综合小案例"><a href="#3-5-综合小案例" class="headerlink" title="3.5 综合小案例"></a>3.5 综合小案例</h4><hr><p><strong>目标：</strong> 使用 GSAP 创建波浪加载动画，通过控制多个竖条的 <code>height</code> 属性，并利用 <code>stagger</code> 制造波浪效果。</p><p><strong>核心GSAP属性运用：</strong></p><ul><li><code>height</code> (CSS属性): 竖条的高度变化。</li><li><code>duration</code>: 单个竖条一次“生长”或“收缩”的时长。</li><li><code>ease</code>: 动画的缓动函数。</li><li><code>repeat: -1</code>: 无限循环。</li><li><code>yoyo: true</code>: 使竖条生长后能自动收缩回原高度。</li><li><code>stagger</code>: 使多个竖条的动画依次启动，形成波浪。</li></ul><p><strong>Vue SFC 代码实现：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gsap-wave-loader-demo bg-slate-800 p-10 py-16 min-h-[250px] flex flex-col items-center justify-center rounded-lg shadow-xl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-slate-300 mb-6 text-lg&quot;</span>&gt;</span>GSAP 波浪加载动画<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading-wave-gsap flex justify-center items-end&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 80px;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wave-bar w-5 h-2.5 bg-teal-400 rounded-t-sm mx-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wave-bar w-5 h-2.5 bg-teal-400 rounded-t-sm mx-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wave-bar w-5 h-2.5 bg-teal-400 rounded-t-sm mx-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wave-bar w-5 h-2.5 bg-teal-400 rounded-t-sm mx-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wave-bar w-5 h-2.5 bg-teal-400 rounded-t-sm mx-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  gsap.<span class="title function_">to</span>(<span class="string">&quot;.wave-bar&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">height</span>: <span class="string">&quot;60px&quot;</span>,          <span class="comment">// 目标高度 (CSS中是50px，这里略作调整以匹配视觉效果)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">duration</span>: <span class="number">0.4</span>,           <span class="comment">// 单程动画时间 (CSS中关键帧0%-50%的过程)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ease</span>: <span class="string">&quot;sine.inOut&quot;</span>,      <span class="comment">// 缓动函数，类似CSS的ease-in-out</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">repeat</span>: -<span class="number">1</span>,              <span class="comment">// 无限重复</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">yoyo</span>: <span class="literal">true</span>,              <span class="comment">// 动画反向播放，实现 10px -&gt; 60px -&gt; 10px 的完整周期</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stagger</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">each</span>: <span class="number">0.1</span>,             <span class="comment">// 每个bar的动画依次延迟0.1秒，对应CSS的animation-delay</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// from: &quot;start&quot;,      // 默认从第一个元素开始，符合CSS效果</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// delay: 0.5,           // (可选) 整个动画序列的初始延迟</span></span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 父容器 .loading-wave-gsap 使用 items-end 来确保 bar 从底部开始“生长” */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.loading-wave-gsap</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 确保有足够空间容纳动画后的高度 */</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.wave-bar</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 初始样式通过Tailwind设置，如 w-5 (20px), h-2.5 (10px), bg-teal-400, rounded-t-sm (顶部圆角), mx-1 (左右margin) */</span></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* GSAP会改变 height 属性 */</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>最终效果：</strong><br>你将看到五个青色的竖条，它们会像声波图一样，从左到右依次、平滑地增高至60px，然后再平滑地回缩至10px，形成一个持续不断的、优雅的波浪起伏动画。</p><p>![](<a href="https://tc.z.wiki/autoupload/20250605/ysLv/0X0/PixPin-2025-06-05-13-51-31.webp">https://tc.z.wiki/autoupload/20250605/ysLv/0X0/PixPin-2025-06-05-13-51-31.webp</a></p><h3 id="4-单位与值的使用"><a href="#4-单位与值的使用" class="headerlink" title="4. 单位与值的使用"></a>4. 单位与值的使用</h3><p>GSAP 在处理属性值时非常智能和灵活。</p><ul><li><p><strong>默认单位</strong>: 对于像 <code>x</code>, <code>y</code>, <code>width</code>, <code>height</code>, <code>fontSize</code> 等属性，如果我们只提供一个数字，GSAP 通常会默认为像素（<code>px</code>）。对于旋转属性 (<code>rotation</code>, <code>skew</code>), 默认单位是度（<code>deg</code>）。</p></li><li><p><strong>指定单位</strong>: 我们可以通过提供一个字符串来明确指定单位，这对于使用百分比、<code>vw</code>, <code>vh</code>, <code>rem</code>, <code>em</code>, <code>rad</code>（弧度）等单位非常重要。</p><p><strong>示例:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(<span class="string">&quot;.box&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">x</span>: <span class="string">&quot;50vw&quot;</span>,     <span class="comment">// 移动到视口宽度的 50% 位置</span></span><br><span class="line">  <span class="attr">width</span>: <span class="string">&quot;80%&quot;</span>,  <span class="comment">// 宽度变为父容器宽度的 80%</span></span><br><span class="line">  <span class="attr">rotation</span>: <span class="string">&quot;1.57rad&quot;</span>, <span class="comment">// 旋转 1.57 弧度 (约 90 度)</span></span><br><span class="line">  <span class="attr">fontSize</span>: <span class="string">&quot;2rem&quot;</span>,  <span class="comment">// 字体大小为 2rem</span></span><br><span class="line">  <span class="attr">duration</span>: <span class="number">1</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p><strong>相对值</strong>: 我们可以使用 <code>&quot;+=value&quot;</code> 或 <code>&quot;-=value&quot;</code> 语法来基于属性的当前值进行相对变化。</p><p><strong>示例:</strong></p><p><img src="https://tc.z.wiki/autoupload/20250605/vGlh/0X0/PixPin-2025-06-05-14-03-07.webp"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container mx-auto p-4&quot;&gt;</span><br><span class="line">&lt;div class=&quot;box w-20 h-20 bg-blue-500 rounded&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;button @click=&quot;animateBox&quot; class=&quot;btn btn-primary mt-4&quot;&gt;开始动画&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; gsap &#125; from &quot;gsap&quot;;</span><br><span class="line">import &#123; onMounted, ref &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  gsap.to(&quot;.box&quot;, &#123;</span><br><span class="line">    x: &quot;+=200&quot;,</span><br><span class="line">    rotation: &quot;-=90&quot;,</span><br><span class="line">    duration: 0.5</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function animateBox() &#123;</span><br><span class="line">  console.log(&quot;animateBox&quot;);</span><br><span class="line">  gsap.to(&quot;.box&quot;, &#123;</span><br><span class="line">    y: &quot;+=50&quot;,</span><br><span class="line">    repeat: 5,</span><br><span class="line">    yoyo: true,</span><br><span class="line">    duration: 0.5</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>函数动态计算值</strong>: 我们可以为任何属性或特殊参数提供一个函数，该函数会在动画创建时执行，并返回动画的目标值。这个函数会接收两个参数：<code>index</code> (当前目标元素在目标数组中的索引) 和 <code>target</code> (当前的 DOM 元素或对象)。这对于动画多个元素，并根据它们的索引或自身特性设置不同的目标值时非常有用。</p><p><strong>示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">50px</span>; <span class="attribute">height</span>: <span class="number">50px</span>; <span class="attribute">background-color</span>: teal; <span class="attribute">margin</span>: <span class="number">10px</span>; <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; gsap &#125; <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">gsap.<span class="title function_">to</span>(<span class="string">&quot;.item&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 每个 item 的 x 移动距离不同，基于其索引</span></span></span><br><span class="line"><span class="language-javascript">  <span class="attr">x</span>: <span class="function">(<span class="params">index, target</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> (index + <span class="number">1</span>) * <span class="number">50</span>; <span class="comment">// 第一个移动 50px，第二个 100px，以此类推</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 每个 item 的背景色不同，基于其索引</span></span></span><br><span class="line"><span class="language-javascript">  <span class="attr">backgroundColor</span>: <span class="function">(<span class="params">index, target</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> colors = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;purple&quot;</span>, <span class="string">&quot;orange&quot;</span>];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> colors[index % colors.<span class="property">length</span>];</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">duration</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">delay</span>: <span class="number">0.5</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">stagger</span>: <span class="number">0.1</span> <span class="comment">// 同时增加交错效果</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://tc.z.wiki/autoupload/20250605/82H5/0X0/PixPin-2025-06-05-21-13-26.webp"></p></li><li><p><strong>随机值</strong>: GSAP 提供了一个 <code>gsap.utils.random()</code> 方法，结合函数参数，我们可以轻松实现动画到随机值。更便捷的是，GSAP 甚至支持在字符串中使用 <code>random()</code> 函数。</p><p><img src="https://tc.z.wiki/autoupload/20250605/h4jp/0X0/PixPin-2025-06-05-21-25-41.webp"></p><p><strong>示例:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot; ref=&quot;boxRef&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;button @click=&quot;animateToRandom&quot; class=&quot;btn btn-primary&quot;&gt;随机动画&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; gsap &#125; from &quot;gsap&quot;;</span><br><span class="line">import &#123; onMounted, ref &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">const boxRef = ref(null);</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  // 初始化动画</span><br><span class="line">  gsap.set(boxRef.value, &#123; x: 0, backgroundColor: &quot;#3498db&quot; &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 使用随机值的动画函数</span><br><span class="line">const animateToRandom = () =&gt; &#123;</span><br><span class="line">  // 方法1：使用 gsap.utils.random() 生成随机值</span><br><span class="line">  const randomX = gsap.utils.random(-100, 100);</span><br><span class="line">  const randomRotation = gsap.utils.random(-180, 180);</span><br><span class="line"></span><br><span class="line">  // 方法2：直接在字符串中使用 random() 函数</span><br><span class="line">  gsap.to(boxRef.value, &#123;</span><br><span class="line">    x: randomX,</span><br><span class="line">    rotation: randomRotation,</span><br><span class="line">    backgroundColor: &quot;random([#e74c3c, #2ecc71, #f39c12, #9b59b6, #1abc9c])&quot;,</span><br><span class="line">    duration: 1,</span><br><span class="line">    ease: &quot;power2.inOut&quot;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">    gsap.set(boxRef.value, &#123;</span><br><span class="line">        x: 400,</span><br><span class="line">        backgroundColor: &quot;#3498db&quot;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.box &#123;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  background-color: #3498db;</span><br><span class="line">  border-radius: 8px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li></ul></div>]]></content>
      
      
      <categories>
          
          <category> 前端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的技术博客SEO优化实践：让搜索引擎更爱你的Hexo站点</title>
      <link href="/2023/10/27/seoTest/"/>
      <url>/2023/10/27/seoTest/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="…-文章正文内容，合理使用H2-H6标题，自然融入关键词-…"><a href="#…-文章正文内容，合理使用H2-H6标题，自然融入关键词-…" class="headerlink" title="… 文章正文内容，合理使用H2-H6标题，自然融入关键词 …"></a>… 文章正文内容，合理使用H2-H6标题，自然融入关键词 …</h1></div>]]></content>
      
      
      <categories>
          
          <category> 博客优化 </category>
          
          <category> 网站推广 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> SEO </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
